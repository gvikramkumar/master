
* need a setup.md for the project to tell people how to get it up and running

pass:
have rule list running, now working on create, but decided to refactor for reused for edit.
should be pretty much done iwth the create, to the point of testing. You commented out edit page, once you have create done, then update ruleServie andd rest of code required for edit.

Then.. submeasure list and supposedly done with the database changes so can push.

//////////////////////////// info

me:
* diff between href and href=javascript:void  and href=/pft/rule-management etc

TODO
* rule create/edit should be same page
* rule create/update needs to use rule object, not properties on comp
* create graphql classes in ui
* create graphql input classes in qi? Const can enforce required then
* go with ruleAddInput, ruleUpdateInput, or look at their trick with the id on put, then add createdBy/Date to that list
* ruleInput doesnt hahve any required fields
* why is she doing the refetchQueries?? what is that again? graphql thing as it's hitting the server with it
* lazy load modules
* bring in your styles directory if appropriate
* breakcrumb code to: data in routing with store observable and routing done handler that pubs to store with breadcrumb subing to that obs.
* review cui comps to see where they get their css from. Internally (
* mongoose schemas don't recognize dates. Ok or not? Only a problem is you need to mess with a date in repo?
* dump the app comp routing event stuff
* css >> scss
* USE ME'S FIELD NAMES FROM NG CODE FOR DB
* add: allocationInput shouldn't require createdBy/date, updatedby/date, that's the api's job to fill in for add
* update: should have created by/date, but updated isn't required (htough might be there)

database
change csv file headers to what's in the code (camel case) and create a doc that maps between the two:
old line followed by new line with titlte line: allocation_rules, RULE_NAME >> name



