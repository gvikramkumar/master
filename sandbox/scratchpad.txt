


get




file repo roles its own getonelatest, but have one in repobase too

you're thinking of just passing req.query to the repo, but that might only have controller values,
then again, would be much more flexible if like that. maybe ocntroller could pull out controller values
and repobase can pull out yearmo and it would work?? then no parms for yearmo and upperOnly as already
in req.query, just have to remove them is all. what would that work on?

get, post?query=true / getMany(filter req.query or req.body)
if groupField then getLatestGroupBy, else if getLatest, then call getOneLatest
what about yearmo??

getLatestGroupField(filter) // and you're doing this wrong, the groupfield is name... you send it in or should
getLatest(filter)
getOne(filter)
getOneLatest(filter)

Only hickup is if you're doing a post query, then not req.query, it's req.body. Oh... you just pass that into repo instead




{
    created_at: {
        $gte: ISODate("2010-04-29T00:00:00.000Z"),
        $lt: ISODate("2010-05-01T00:00:00.000Z")
    }
}


how could controller base work with repobase?? Already doing it right? No, so look to see if you can make that
happen maybe

what you want:

rules grouped by latest with upper limit
rules grouped by latest in a date range?? No use case for this yet, but maybe jsut do it??
upload collections within a date range

what's he got from ui?
measure >> submeasure >> yearmo so I guess you get submeasureName and yearmo in querystring
then hits endpoint?? I guess the upload endpoint so say GET /api/dollar_upload?submeasure&yearmo
so controller calls repo with submeasureName: xx, startDate, endDate, so can have custom function in repo, but we
want a shared function, so need to drive it with controller special function? Or controller base function too?


and what for rules, already has a groupField, but now needs a dataRange and if no start date, then uses upper only?
but same function then, just that it can do uppper only if no start date















